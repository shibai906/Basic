桥接模式：
    用于把抽象化与实现化解耦，使得二者可以独立变化，这种类型的设计模式属于结构型模式，它通过提供抽象化和实现化之间的桥接结构，实现二者的解耦。
    这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。这两种类型的类可被结构化改变而互不影响。

个人理解：桥接是一个接口，它与一方应该是绑定的，也就是解耦的双方中的一方必然是继承这个接口的，这一方就是实现方，而另一个正是要与这一方解耦的抽象方，如果不采用桥接模式，一般我们的处理方式是直接使用继承来实现，这样双方之间处于强链接，类之间关联性极强，如果要进行扩展，必然导致类结构几句膨胀。采用桥接模式，正是为了避免这一情况的发生，将一方与桥绑定，既实现桥接口，另一方在抽象类中调用桥接口(指向的实现类)，这样桥方可以通过实现桥接口进行单方面扩展，而另一方可以继承抽象类而单方面扩展，而之间的调用就从桥接口来作为突破口，不会受到双方扩展的任何影响。

它的好处是，只要继续继承各自的父类，通过此处将桥与目的地绑定在一起，使用一个接口完成。
注意以下几点:
1、定义一个桥接口，使其与一方绑定，这一方的扩展全部使用实现桥接口的方式。
2、定义一个抽象类，表示另一方，在这个抽象类内部要引入桥接口，而这一方的扩展全部使用继承该抽象类的方式。


桥接是用于把抽象化与实现化解耦，使得二者可以独立变化，这种类型的设计模式属于结构型模式，它通过提供抽象化和实现化之间的桥接结构，来实现二者的解耦。

这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。这两种类型的类可被结构化的改变而互不影响。

