享元模式:
    顾名思义：共享元对象。如果在一个系统中存在多个相同的对象，那么只需要共享一份对象的拷贝，而不必为每一次使用创建新的对象。
    它是为数不多的、只为提升系统性能而生的设计模式。它的主要作用就是复用大对象(重量级对象)，以节省内存空间和对象创建时间。

模式结构：
    1、Flyweight：享元接口，通过这个接口Flyweight可以接受并作用于外部状态。通过这个接口可以传入外部的状态，在享元对象的方法处理中可能会使用这些外部的数据。
    2、ConcreteFlyweight：具体的享元实现对象，必须是共享的，需要封装Flyweight的内部状态。
    3、UnshareConcreteFlyweight：非共享的享元实现对象，并不是所有的Flyweight实现对象都需要共享。非共享的享元实现对象通常是对享元对象的组合对象。
    4、FlyweightFactoty：享元工厂，主要用来创建并管理共享的享元对象，并对外提供访问共享享元的接口。
    5、Client：享元客户端，主要的工作就是维持一个对Flyweight的引用，计算或存储享元的外部状态，当然这里可访问共享和不共享的Flyweight对象。


使用场景：
    当项目中创建很多对象，而且这些对象存在许多相同模块，我们可以将这些相同的模块提取出来采用享元对象，再使用这个对象与之前的诸多对象进行配合使用，这样会节省很多空间。



