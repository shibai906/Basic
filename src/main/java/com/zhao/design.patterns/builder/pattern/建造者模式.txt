建造者模式：
    是一个将复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的对象实例。工厂类模式提供的是创建单个类的模式，而建造者模式则是将各种产品集中起来进行管理，用来创建复合对象，复合对象是指某个类具有不同的属性，其建造者模式就是前面抽象工厂模式和最后的Test结合起来得到的。
    它有以下几种角色：
    1、Builder：给出一个抽象接口，以规范产品的各个组成成分的构造，这个接口规定要实现复杂对象的哪些部分的创建，并不涉及具体对象部件的创建。
    2、ConcreteBuilder：实现Builder接口，针对不同的商业逻辑，具体化复杂对象的各部分的创建。在创造过程完成后，提供产品的实例。
    3、Directer：调用具体建造者来创建复杂对象的各个部分，在指导者中不设计具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建。
    4、Product：要创建的复杂对象

使用场景：
1、需要生成的对象具有复杂的内部结构。
2、需要生成的对象内部属性本身相互依赖。


