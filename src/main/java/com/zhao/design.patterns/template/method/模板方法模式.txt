模板方法模式
    准备一个抽象类，将部分逻辑以具体方法以及具体构造函数的形式实现，然后声明一些抽象方法来迫使子类实现剩余逻辑。不同子类可以以不同的方式实现这些抽象方法。
    抽象类：实现了模块方法，定义了算法的骨架
    具体类：实现抽象类中的抽象方法，已完成完整的算法。

优点：模板方法可以通过把不变的行为搬移到超类，去除子类中的重复代码。
    子类实现算法的某些细节，有助于算法的扩展
    通过一个父类调用子类实现的操作，通过子类扩展增加新的行为，不用多加，对固定形式的类设计有很大帮助。
缺点：每个不同的实现都需要定义一个子类，会导致类的个数增加，设计更加抽象，基本结构要很固定。